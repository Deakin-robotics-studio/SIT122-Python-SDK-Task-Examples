from naoqi import ALProxy

posture = ALProxy("ALRobotPosture", "localhost", 9559)
motion = ALProxy("ALMotion", "localhost", 9559)

# Ensure the robot is standing first.
posture.goToPosture("Stand", 1.0)

names = list()
times = list()
keys = list()

names.append("LElbowRoll")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[-0.41473, [3, -0.266667, 0], [3, 0.0666667, 0]], [-0.41473, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.41473, [3, -0.133333, 0], [3, 0.0666667, 0]], [-0.41473, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.41473, [3, -0.133333, 0], [3, 0.0666667, 0]], [-0.41473, [3, -0.0666667, 0], [3, 0.12, 0]], [-0.41473, [3, -0.12, 0], [3, 0.213333, 0]], [-0.41473, [3, -0.213333, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[-1.18732, [3, -0.266667, 0], [3, 0.0666667, 0]], [-1.18732, [3, -0.0666667, 0], [3, 0.133333, 0]], [-1.18732, [3, -0.133333, 0], [3, 0.0666667, 0]], [-1.18732, [3, -0.0666667, 0], [3, 0.133333, 0]], [-1.18732, [3, -0.133333, 0], [3, 0.0666667, 0]], [-1.18732, [3, -0.0666667, 0], [3, 0.12, 0]], [-1.18732, [3, -0.12, 0], [3, 0.213333, 0]], [-1.18732, [3, -0.213333, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[0.295054, [3, -0.266667, 0], [3, 0.0666667, 0]], [0.295054, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.295054, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.295054, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.295054, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.295054, [3, -0.0666667, 0], [3, 0.12, 0]], [0.295054, [3, -0.12, 0], [3, 0.213333, 0]], [0.295054, [3, -0.213333, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[1.47235, [3, -0.266667, 0], [3, 0.0666667, 0]], [1.47235, [3, -0.0666667, 0], [3, 0.133333, 0]], [1.47235, [3, -0.133333, 0], [3, 0.0666667, 0]], [1.44683, [3, -0.0666667, 0], [3, 0.133333, 0]], [1.44683, [3, -0.133333, 0], [3, 0.0666667, 0]], [1.44683, [3, -0.0666667, 0], [3, 0.12, 0]], [1.44683, [3, -0.12, 0], [3, 0.213333, 0]], [1.44683, [3, -0.213333, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[0.178406, [3, -0.266667, 0], [3, 0.0666667, 0]], [0.178406, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.178406, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.216147, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.216147, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.216147, [3, -0.0666667, 0], [3, 0.12, 0]], [0.216147, [3, -0.12, 0], [3, 0.213333, 0]], [0.216147, [3, -0.213333, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[0.0962669, [3, -0.266667, 0], [3, 0.0666667, 0]], [0.0962669, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.0962669, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.0962669, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.0962669, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.0962669, [3, -0.0666667, 0], [3, 0.12, 0]], [0.0962669, [3, -0.12, 0], [3, 0.213333, 0]], [0.0962669, [3, -0.213333, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[0.39926, [3, -0.266667, 0], [3, 0.0666667, 0]], [0.39926, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.39926, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.39926, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.39926, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.39926, [3, -0.0666667, 0], [3, 0.12, 0]], [0.39926, [3, -0.12, 0], [3, 0.213333, 0]], [0.408243, [3, -0.213333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[1.17164, [3, -0.266667, 0], [3, 0.0666667, 0]], [1.17164, [3, -0.0666667, 0], [3, 0.133333, 0]], [1.17164, [3, -0.133333, 0], [3, 0.0666667, 0]], [1.17164, [3, -0.0666667, 0], [3, 0.133333, 0]], [1.17164, [3, -0.133333, 0], [3, 0.0666667, 0]], [1.17164, [3, -0.0666667, 0], [3, 0.12, 0]], [1.17164, [3, -0.12, 0], [3, 0.213333, 0]], [1.18059, [3, -0.213333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[0.295054, [3, -0.266667, 0], [3, 0.0666667, 0]], [0.295054, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.295054, [3, -0.133333, 0], [3, 0.0666667, 0]], [1, [3, -0.0666667, 0], [3, 0.133333, 0]], [1, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.37, [3, -0.0666667, 0], [3, 0.12, 0]], [0.37, [3, -0.12, 0], [3, 0.213333, 0]], [0.37, [3, -0.213333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[0.220801, [3, -0.266667, 0], [3, 0.0666667, 0]], [0.220801, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.220801, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.220801, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.220801, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.220801, [3, -0.0666667, 0], [3, 0.12, 0]], [0.220801, [3, -0.12, 0], [3, 0.213333, 0]], [1.41456, [3, -0.213333, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[-0.125262, [3, -0.266667, 0], [3, 0.0666667, 0]], [-0.125262, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.125262, [3, -0.133333, 0], [3, 0.0666667, 0]], [-0.125262, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.125262, [3, -0.133333, 0], [3, 0.0666667, 0]], [-0.125262, [3, -0.0666667, 0], [3, 0.12, 0]], [-0.125262, [3, -0.12, 0], [3, 0.213333, 0]], [-0.175603, [3, -0.213333, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.8, 1, 1.4, 1.6, 2, 2.2, 2.56, 3.2])
keys.append([[0.0962669, [3, -0.266667, 0], [3, 0.0666667, 0]], [0.0962669, [3, -0.0666667, 0], [3, 0.133333, 0]], [-1.27718, [3, -0.133333, 0], [3, 0.0666667, 0]], [-1.04124, [3, -0.0666667, 0], [3, 0.133333, 0]], [-1.04124, [3, -0.133333, 0], [3, 0.0666667, 0]], [-1.04124, [3, -0.0666667, 0], [3, 0.12, 0]], [0.389821, [3, -0.12, 0], [3, 0.213333, 0]], [0.389821, [3, -0.213333, 0], [3, 0, 0]]])

# Execute the animation.
motion.angleInterpolationBezier(names, times, keys)

# Sit back down.
posture.goToPosture("Sit", 1.0)